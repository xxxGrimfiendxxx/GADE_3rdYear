using System.Collections;
using System.Collections.Generic;
using UnityEngine;
/*
public class Cubemap : MonoBehaviour
{
    public int gridSize = 32; // Size of the 3D grid
    public float surfaceLevel = 0.5f; // Threshold to determine where the surface is
    public float scale = 10f; // Scale of the Perlin noise
    public float isoLevel = 0.5f; // Isosurface level

    private MeshFilter meshFilter;
    private Mesh mesh;

    void Start()
    {
        meshFilter = GetComponent<MeshFilter>();
        mesh = new Mesh();
        meshFilter.mesh = mesh;

        GenerateMesh();
    }

    void GenerateMesh()
    {
        List<Vector3> vertices = new List<Vector3>();
        List<int> triangles = new List<int>();

        for (int x = 0; x < gridSize - 1; x++)
        {
            for (int y = 0; y < gridSize - 1; y++)
            {
                for (int z = 0; z < gridSize - 1; z++)
                {
                    float[] cube = new float[8];
                    Vector3[] cubeVertices = new Vector3[8];

                    for (int i = 0; i < 8; i++)
                    {
                        int ix = x + vertexOffset[i, 0];
                        int iy = y + vertexOffset[i, 1];
                        int iz = z + vertexOffset[i, 2];

                        cubeVertices[i] = new Vector3(ix, iy, iz);
                        cube[i] = SampleNoise(ix, iy, iz);
                    }

                    MarchCube(cubeVertices, cube, vertices, triangles);
                }
            }
        }

        mesh.vertices = vertices.ToArray();
        mesh.triangles = triangles.ToArray();
        mesh.RecalculateNormals();
    }
    
    void MarchCube(Vector3[] cubeVertices, float[] cube, List<Vector3> vertices, List<int> triangles)
    {
        int cubeIndex = 0;
        for (int i = 0; i < 12; i++)
        {
            if (cube[i] < isoLevel)
                cubeIndex |= 1 << i;
        }

        int[] edges[i] = edgeTable[cubeIndex,i];
        if (edges[0] == -1)
            return;

        Vector3[] vertList = new Vector3[12];
        for (int i = 0; i < 12; i++)
        {
            if ((edges[i] & (1 << i)) != 0)
            {
                int v1 = edgeConnection[i, 0];
                int v2 = edgeConnection[i, 1];
                vertList[i] = VertexInterp(cubeVertices[v1], cubeVertices[v2], cube[v1], cube[v2]);
            }
        }

        for (int i = 0; triTable[cubeIndex, i] != -1; i += 3)
        {
            int a = triTable[cubeIndex, i];
            int b = triTable[cubeIndex, i + 1];
            int c = triTable[cubeIndex, i + 2];

            triangles.Add(vertices.Count);
            vertices.Add(vertList[a]);

            triangles.Add(vertices.Count);
            vertices.Add(vertList[b]);

            triangles.Add(vertices.Count);
            vertices.Add(vertList[c]);
        }
    }

    float SampleNoise(int x, int y, int z)
    {
        float sampleX = (float)x / gridSize * scale;
        float sampleY = (float)y / gridSize * scale;
        float sampleZ = (float)z / gridSize * scale;

        return Mathf.PerlinNoise(sampleX, sampleY) * Mathf.PerlinNoise(sampleZ, sampleY);
    }

    Vector3 VertexInterp(Vector3 p1, Vector3 p2, float v1, float v2)
    {
        if (Mathf.Abs(isoLevel - v1) < 0.00001f)
            return p1;
        if (Mathf.Abs(isoLevel - v2) < 0.00001f)
            return p2;
        if (Mathf.Abs(v1 - v2) < 0.00001f)
            return p1;

        float t = (isoLevel - v1) / (v2 - v1);
        return p1 + t * (p2 - p1);
    }

    private static readonly int[,] edgeConnection = new int[,]
    {
        {0,1}, {1,2}, {2,3}, {3,0},
        {4,5}, {5,6}, {6,7}, {7,4},
        {0,4}, {1,5}, {2,6}, {3,7}
    };

    private static readonly int[,] vertexOffset = new int[,]
    {
        {0,0,0}, {1,0,0}, {1,1,0}, {0,1,0},
        {0,0,1}, {1,0,1}, {1,1,1}, {0,1,1}
    };

    private static readonly int[,] triTable = new int[256, 16]
    {
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1},
        {3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1},
        {3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1},
        {3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1},
        {9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
        {2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1},
        {8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
        {4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1},
        {3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1},
        {1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1},
        {4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1},
        {4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
        {5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1},
        {2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1},
        {9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
        {0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
        {2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1},
        {10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1},
        {5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1},
        {5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1},
        {9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1},
        {1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1},
        {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1},
        {8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1},
        {2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1},
        {7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1},
        {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1},
        {11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1},
        {5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1},
        {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1},
        {11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1},
        {9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1},
        {2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1},
        {6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1},
        {3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1},
        {6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
        {10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1},
        {6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1},
        {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1},
        {7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1},
        {3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
        {5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1},
        {0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1},
        {9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1},
        {8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1},
        {5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1},
        {0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1},
        {6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1},
        {10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1},
        {10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1},
        {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1},
        {1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1},
        {0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1},
        {10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1},
        {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1},
        {6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1},
        {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1},
        {8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1},
        {3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1},
        {6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1},
        {0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1},
        {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1},
        {10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1},
        {2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1},
        {7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1},
        {7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1},
        {2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1},
        {1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1},
        {11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1},
        {8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1},
        {0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1},
        {7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
        {10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
        {2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
        {6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1},
        {7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1},
        {2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1},
        {1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1},
        {10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1},
        {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1},
        {0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1},
        {7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1},
        {6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1},
        {8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1},
        {9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1},
        {6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1},
        {4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1},
        {10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1},
        {8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1},
        {0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1},
        {1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1},
        {8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1},
        {10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1},
        {4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1},
        {10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
        {5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
        {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1},
        {9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
        {6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1},
        {7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1},
        {3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1},
        {7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1},
        {3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1},
        {6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1},
        {9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1},
        {1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1},
        {4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1},
        {7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1},
        {6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1},
        {3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1},
        {0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1},
        {6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1},
        {0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1},
        {11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1},
        {6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1},
        {5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1},
        {9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1},
        {1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1},
        {1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1},
        {10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1},
        {0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1},
        {5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1},
        {10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1},
        {11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1},
        {9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1},
        {7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1},
        {2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1},
        {8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1},
        {9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1},
        {9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1},
        {1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1},
        {9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1},
        {9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1},
        {5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1},
        {0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1},
        {10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1},
        {2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1},
        {0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1},
        {0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1},
        {9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1},
        {5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1},
        {3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1},
        {5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1},
        {8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1},
        {0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1},
        {9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1},
        {0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1},
        {1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1},
        {3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1},
        {4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1},
        {9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1},
        {11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1},
        {11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1},
        {2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1},
        {9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1},
        {3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1},
        {1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1},
        {4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1},
        {4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1},
        {0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1},
        {3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1},
        {3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1},
        {0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1},
        {9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1},
        {1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
        {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
    };

    private static readonly int[,] edgeTable = new int[256, 16]
{
    { 0x0194, 0x38A1, 0xA31A, 0x5E15, 0x394F, 0x1D5B, 0x6554, 0x43E9, 0xD673, 0x327E, 0xC311, 0xB9AF, 0x6636, 0x367E, 0xF4AB, 0x6806 },
 { 0xBB75, 0xBA95, 0xBD49, 0xD491, 0xBD81, 0xA2EF, 0xAA9C, 0xAFF0, 0x469F, 0x8720, 0x39AE, 0x8037, 0x7565, 0x830D, 0xFA08, 0xA92C },
 { 0xB8B6, 0xB6E7, 0xDCE3, 0x2685, 0x0D93, 0xA625, 0x8A02, 0x3921, 0xACD8, 0xF0FE, 0x363D, 0xF0CA, 0xE7BC, 0x5B00, 0x7434, 0x7934 },
 { 0x3832, 0x2E86, 0xC9AE, 0xB001, 0x8FA6, 0xCA5B, 0xB16F, 0x5EA4, 0x8E04, 0xF329, 0x1775, 0xB22E, 0xE3AB, 0xE51C, 0xCE83, 0x5366 },
 { 0x3874, 0x19E4, 0x00F8, 0xAF4D, 0x5999, 0xCE25, 0x5A72, 0x154F, 0x3092, 0x8428, 0x27B8, 0xCC81, 0x6CB2, 0xB9D0, 0xC832, 0xEB9E },
 { 0x12EB, 0xC078, 0x4804, 0x46DE, 0xB95E, 0x4A07, 0x1986, 0xEE59, 0x0578, 0x7E3E, 0x987F, 0x1A69, 0x8EB0, 0xD7D3, 0x5574, 0xC7BB },
 { 0x227B, 0xE2D6, 0xB856, 0xCDD8, 0x5A07, 0xC4E6, 0x1F9A, 0x6A0B, 0xD413, 0xB45E, 0x7F6E, 0x0B7D, 0xA2A3, 0xE4EC, 0xF1F1, 0xD433 },
 { 0x2AF6, 0x2BD6, 0x9F42, 0x2333, 0x9D17, 0x87A4, 0x9A06, 0xEE6B, 0x005D, 0x129E, 0xA9D5, 0xDB5A, 0x35A6, 0x4008, 0x869E, 0x58BE },
 { 0x2EB3, 0x5FFC, 0xAA06, 0x89DA, 0x017A, 0xFA59, 0x9196, 0x4E04, 0xA0DD, 0xDDF8, 0x72CA, 0x04FF, 0xCA98, 0x0E09, 0x4BB6, 0x208B },
 { 0x8C4C, 0xC44B, 0xEF72, 0x62D9, 0x3890, 0x3241, 0x2AA4, 0x9AD5, 0x48CF, 0xC9E9, 0xCD7A, 0x4769, 0x1B10, 0x443F, 0x3465, 0x940B },
 { 0x2DBF, 0x26B0, 0xDCC9, 0x42A6, 0x3AE5, 0x6816, 0xD2B8, 0x309B, 0x9A3F, 0x513E, 0x8254, 0xBF1E, 0x14DA, 0x9507, 0x23D3, 0xF253 },
 { 0xC6E6, 0x894A, 0x4F0D, 0x715A, 0x5094, 0x23C4, 0x202D, 0xFC71, 0x3557, 0x0F30, 0x410B, 0x378F, 0x2CDF, 0x4A2C, 0x32F3, 0x5C9D },
 { 0xA992, 0xDEBD, 0xD73E, 0xA3E7, 0x313E, 0x090F, 0xE5A4, 0x2435, 0xF191, 0xBED6, 0xC899, 0xE750, 0xAFEB, 0x6B85, 0x85FB, 0xB3C7 },
 { 0xA616, 0xDB25, 0x8082, 0x91C5, 0xF530, 0xC309, 0x4376, 0x09FB, 0x0683, 0xE057, 0x0D4F, 0x2BB5, 0x270B, 0x9B29, 0x03BC, 0x5012 },
 { 0x1E4B, 0x25B6, 0x158B, 0x361B, 0xBDC7, 0x7FEB, 0xC114, 0xBDD6, 0xA3A5, 0x2AD7, 0x7FC7, 0x91BD, 0x5B2A, 0x38DB, 0x4C85, 0xC9D1 },
 { 0x8934, 0x8D42, 0x9178, 0x51B8, 0xC9A9, 0xA12D, 0x676B, 0xE688, 0x9B47, 0xCD43, 0x9D64, 0x50E6, 0xFBBF, 0xB9EE, 0xFD29, 0x5668 },
 { 0xBB19, 0x7887, 0xC905, 0x8A34, 0x55FA, 0x4FDF, 0xF5FE, 0x262A, 0x1A10, 0xC2AB, 0xEE1F, 0xCA59, 0x4342, 0xB1B8, 0xAECF, 0xCDA6 },
 { 0x93D1, 0x437C, 0xA27F, 0x99C7, 0x09B0, 0xB203, 0x8667, 0x7D1C, 0xBE49, 0x2F02, 0x9AD3, 0xF082, 0xE286, 0x702E, 0xC215, 0xE9B5 },
 { 0x2DAD, 0x295F, 0xD6A2, 0xE2A1, 0x6FD5, 0xC24F, 0x73D7, 0x3954, 0x9742, 0x6B4D, 0x37A7, 0x06FE, 0xB30D, 0x9D11, 0xA345, 0xE98E },
 { 0x1E74, 0xCFBC, 0xBD13, 0xB843, 0x176E, 0x6361, 0x4CB7, 0x0916, 0xF21E, 0x4BE8, 0xCBE9, 0x26F7, 0xB50B, 0x057C, 0x43A3, 0xA9E1 },
 { 0x0095, 0x0469, 0x9CAB, 0x19E2, 0xDB14, 0xCC2C, 0x5DD0, 0xD181, 0xCFA4, 0x692B, 0x0284, 0x9E61, 0x7A5C, 0x7F68, 0xCA0E, 0x2137 },
 { 0x8BBB, 0xB143, 0xD20E, 0x12C9, 0xB319, 0x09D2, 0xD246, 0xCA4A, 0xDCA7, 0xCD8C, 0xF082, 0x23EC, 0xF664, 0x4CDF, 0x8448, 0x91C6 },
 { 0x27AA, 0x8DC4, 0x0669, 0xAEA3, 0x0066, 0x8963, 0x0E79, 0x5246, 0x71EB, 0xEB91, 0xE89E, 0xAE42, 0x60DC, 0xAE54, 0x8EB8, 0x72B5 },
 { 0x81D8, 0xAAB1, 0x9B3B, 0x03C7, 0x336C, 0x30DA, 0xF6C6, 0xF6C2, 0x3222, 0xD25F, 0x3D3A, 0x0D88, 0xDBA9, 0x39E4, 0xDB1B, 0x82C4 },
 { 0xE4E2, 0x70BD, 0x76B7, 0xEC96, 0x78FF, 0x1B6B, 0x20D1, 0x0257, 0xA2CA, 0x7FC8, 0xA0DC, 0xC787, 0x2133, 0x2403, 0x696D, 0x2E52 },
 { 0x3ED3, 0x7DCC, 0xA212, 0x4BB2, 0xB1A2, 0x8080, 0x5E59, 0xF6CE, 0x96FD, 0x0FA5, 0x7C80, 0x2E05, 0x4C29, 0x00F1, 0x769B, 0x3807 },
 { 0x1075, 0x65D9, 0xC95F, 0xF01E, 0x379C, 0xA221, 0xF9B5, 0x666C, 0x89E0, 0x98E4, 0x60FC, 0xB3A3, 0x8FFC, 0x2F3F, 0xD58F, 0x0E1E },
 { 0x68F2, 0x0EE7, 0xCEB3, 0x5DDD, 0x97D0, 0x8F68, 0xD120, 0x6461, 0x1263, 0x7FE8, 0x5599, 0x6959, 0x9EEA, 0xF2CB, 0xB62D, 0xA1D8 },
 { 0x092C, 0x68D4, 0xB711, 0xBB58, 0x5AA3, 0x794D, 0xF6B4, 0x9CB1, 0x8415, 0x3BA6, 0xC1D1, 0x18BE, 0x1F84, 0xAAB5, 0x66D2, 0x67BD },
 { 0x3A15, 0x6E61, 0xC512, 0x3D41, 0x323C, 0x18BD, 0xA036, 0x810B, 0x94B7, 0x64FD, 0xDDBB, 0xB7B3, 0x4C88, 0x905B, 0xC781, 0x9713 },
 { 0xE2B5, 0xBF22, 0xAA76, 0x2727, 0x782C, 0x1A36, 0xB37A, 0xEFA3, 0x1832, 0x3202, 0xD9C6, 0x5C2A, 0xCD96, 0xB862, 0x44DD, 0x67AC },
 { 0x1916, 0xEDDA, 0x2F44, 0x3088, 0x2DB9, 0x78EB, 0x6F9B, 0xF06D, 0xC89D, 0x3605, 0x26A0, 0xF5A4, 0x9B91, 0x3F00, 0x5028, 0xF3B9 },
 { 0x7423, 0x2ABD, 0x3607, 0x6060, 0x003F, 0x3FAA, 0xEF90, 0x1FDF, 0xBAE6, 0xD56E, 0x250F, 0x003A, 0x3EF6, 0x440C, 0xB374, 0xDC54 },
 { 0x2020, 0x760F, 0x9E9D, 0x5EAD, 0x6117, 0x96F8, 0x695A, 0x69CA, 0x4F86, 0xBA07, 0x5E89, 0x4227, 0xF394, 0xBDD4, 0x5411, 0xD930 },
 { 0xE1D8, 0xE60C, 0xE805, 0xA2D9, 0x825A, 0xE47B, 0x676D, 0xD96A, 0xFE49, 0x0F64, 0x75A1, 0x584A, 0x53DC, 0x6F61, 0xB177, 0x8491 },
 { 0x8290, 0x4A4B, 0xD584, 0x2582, 0xA062, 0xF17A, 0x92A2, 0xDD29, 0xC161, 0xCC3C, 0x10DA, 0x4636, 0xE11F, 0xAD68, 0x2C49, 0xFD10 },
 { 0x815C, 0x4BDD, 0x1E60, 0x58E9, 0x5C05, 0x109B, 0x59FA, 0x3BA4, 0x0EA1, 0xC531, 0x6063, 0x51B2, 0x2157, 0x1110, 0x15ED, 0xE024 },
 { 0x088F, 0xD9F6, 0xBF96, 0xA949, 0xE84F, 0x2E8F, 0x38CE, 0xF05D, 0x5369, 0x0ADB, 0xE176, 0xB61C, 0xD3A1, 0x2136, 0xF84A, 0x50E0 },
 { 0xE319, 0x788F, 0xD6EC, 0x07FE, 0x5100, 0x588E, 0x288B, 0x71F4, 0xF04F, 0x99E0, 0x16E0, 0xDB2F, 0x9116, 0x40F0, 0xBBD2, 0xB051 },
 { 0xB64E, 0x30B5, 0x3DA6, 0x0728, 0xEDD1, 0x82FF, 0x14C1, 0x52CC, 0x130F, 0x2E02, 0x057F, 0x5129, 0x2F24, 0xA3DC, 0x6802, 0xED69 },
 { 0xCCE6, 0x0F83, 0x6E97, 0xA8C7, 0x3A22, 0x0DEE, 0x8F23, 0xB000, 0xB16B, 0x4DA1, 0xB8F8, 0x4E6F, 0x17AE, 0x5D9D, 0x5F46, 0x1279 },
 { 0x4F08, 0x3124, 0xFFCD, 0xA2EC, 0xE38F, 0xF121, 0x630D, 0x601A, 0x63CD, 0x8420, 0xF4EE, 0x22FE, 0x530E, 0xD760, 0x42D0, 0x4C73 },
 { 0x31DE, 0x2975, 0x0E48, 0x8193, 0xD257, 0x130A, 0x762E, 0xA85F, 0xA190, 0x8DA5, 0x55BC, 0xA030, 0xCA05, 0xC651, 0x3B1D, 0xB570 },
 { 0xCEBA, 0xF305, 0x0221, 0xFDFE, 0xA40D, 0xC515, 0x09DA, 0xDBC4, 0xAC74, 0x0E7D, 0x44F9, 0xB601, 0x18FF, 0x6C25, 0x5CF1, 0xDA09 },
 { 0x0AD0, 0x6C85, 0x1C91, 0xEE38, 0x4F54, 0xDDB1, 0x4020, 0x3BFE, 0xBAF5, 0x576D, 0x015B, 0x55EA, 0x9B64, 0xC2DC, 0x9613, 0x9D7B },
 { 0x4902, 0x3F7D, 0x5443, 0x6008, 0xD53F, 0x44D1, 0xA864, 0x6CC7, 0x1F9B, 0x3283, 0xD51E, 0xC3DA, 0xCE10, 0xC02B, 0x8F60, 0x356B },
 { 0x30B3, 0x7BB2, 0x955F, 0x5D80, 0xA9C0, 0x4CE4, 0x661B, 0xF107, 0xB2E5, 0xC622, 0x4308, 0x4CA0, 0xC3B9, 0xB3EF, 0x4060, 0xE996 },
 { 0x7868, 0xA77D, 0x6CFF, 0xD980, 0x17E1, 0xFCE8, 0x04C9, 0xC5FE, 0xC41F, 0xAFC8, 0xCE9D, 0x1CD1, 0x0893, 0x7C44, 0x6DEC, 0xFAC8 },
 { 0xC80C, 0xCBEF, 0x2537, 0x1FB2, 0x2D7D, 0x3892, 0xF3B9, 0xFC1D, 0xD961, 0x633A, 0xAD21, 0x0F1D, 0x01C8, 0x5BC4, 0xA90D, 0x6BAA },
 { 0xF222, 0xEB87, 0x4B72, 0x2693, 0x532C, 0xB5DE, 0x1D89, 0x33C9, 0x76E8, 0xCF60, 0x9960, 0xF9F7, 0x7E46, 0x494A, 0xE874, 0x36A0 },
 { 0x5835, 0x483F, 0x8492, 0xF7C9, 0x8EB8, 0x20AD, 0xBC18, 0x3FD6, 0xB3C2, 0x70E1, 0x001F, 0xB4A6, 0x4FC7, 0xF5AB, 0xC435, 0x685B },
 { 0x06BA, 0x62F2, 0x2AAE, 0x1D0A, 0x30D2, 0x4759, 0xA79C, 0x122D, 0xAE65, 0xF16C, 0xA8C9, 0x5E1C, 0x9F31, 0xF9C1, 0x7DD6, 0x9016 },
 { 0x7AC4, 0x7680, 0xB6E7, 0xB988, 0xD730, 0xB143, 0xDCF1, 0xD174, 0x2F6E, 0x0B9C, 0x72CF, 0xE24A, 0xB5BF, 0x68E2, 0xE401, 0x813B },
 { 0x0B2A, 0x3104, 0xF33C, 0x1B53, 0x1E9B, 0xCB6A, 0x05CE, 0x10DB, 0xA0A2, 0x7265, 0x4963, 0x9D4A, 0x77E3, 0x5DFC, 0xA0A3, 0xB9FF },
 { 0xF309, 0x7007, 0x39E1, 0xD945, 0x3EC4, 0x0AAD, 0x912A, 0x5576, 0x8600, 0x5939, 0xED9A, 0x2536, 0xD488, 0xC550, 0x5C6D, 0x4583 },
 { 0x0D6B, 0x278D, 0x52F1, 0x6E2C, 0x0685, 0x6283, 0x717B, 0xAF59, 0x70B2, 0xA60B, 0x18E6, 0x64CB, 0x67DF, 0x3FA6, 0x5990, 0xD171 },
 { 0x6AF7, 0xB8CF, 0xEF3F, 0x45B8, 0x2F00, 0x0ABC, 0x4277, 0x007D, 0x9FD9, 0x9DC5, 0x9552, 0xC561, 0xDDCE, 0xE097, 0x3C51, 0xDB50 },
 { 0x15F7, 0x03E0, 0x8FDF, 0x5056, 0x0B0A, 0x3277, 0xB37A, 0x9086, 0xFE8A, 0x8A86, 0x6892, 0x98B7, 0xF1C5, 0x2C5E, 0xED96, 0x4659 },
 { 0xFFA8, 0x1C29, 0xBA3D, 0x1BB9, 0xD60F, 0x16B4, 0x1683, 0x02AF, 0xE515, 0x5274, 0xCE51, 0x68BE, 0xCD2F, 0xAC19, 0xD18A, 0x901A },
 { 0x69B9, 0x3D95, 0x4ED3, 0x63FF, 0xAFC6, 0x0939, 0xC666, 0x3880, 0x0555, 0x5EB9, 0x472C, 0xA478, 0xA228, 0xA9BE, 0x0EB6, 0x737B },
 { 0xB02E, 0x4EF8, 0xC5B7, 0xC1A4, 0x2659, 0x2097, 0x0540, 0xFF41, 0xED5C, 0x8D2F, 0x6B40, 0xB894, 0x6424, 0x4ABB, 0xC355, 0x5271 },
 { 0xB8FB, 0xD877, 0x2EFE, 0xB430, 0xDD8A, 0x8997, 0x9692, 0xF66E, 0x55C1, 0x81BD, 0x1664, 0x7755, 0xCF87, 0x7209, 0x6085, 0x3B56 },
 { 0x43BE, 0x5AD6, 0xB88F, 0x7E37, 0xE660, 0x0FE5, 0x69C1, 0x4921, 0x3854, 0x4F90, 0x76A1, 0x2296, 0x9DF8, 0x0DD2, 0xD45A, 0xBA98 },
 { 0x9B63, 0xF4B9, 0xEB7B, 0xC9B0, 0x7AC0, 0x5A84, 0x95EF, 0x2696, 0xB865, 0xCF48, 0x6BE3, 0xA49A, 0x0A33, 0x8DE9, 0x2FBA, 0x7B52 },
 { 0x2CA9, 0x2FE9, 0x74D6, 0x094E, 0x922A, 0x451D, 0x6C10, 0xA916, 0x6EB5, 0xE5DB, 0x7BDC, 0x8DF9, 0x12F5, 0x73FB, 0x5876, 0x47EF },
 { 0xAD62, 0x5BCA, 0xDBF1, 0xDACD, 0x868C, 0x96D4, 0xC095, 0xE938, 0xC4E5, 0x91F9, 0xC5D1, 0x1717, 0xA401, 0xC526, 0x3EEE, 0xAA69 },
 { 0x1FD6, 0xFB4E, 0xF5EB, 0x6E0E, 0x98FA, 0xCB0C, 0x286E, 0x5645, 0x88A8, 0x4265, 0x5AFA, 0x94E4, 0xDEA7, 0x07F6, 0x13A1, 0x4469 },
 { 0x76D2, 0x23F3, 0xF736, 0xAE67, 0xB1F7, 0x54EB, 0xF4C4, 0x95D4, 0x6F53, 0x8B9D, 0x4467, 0x0031, 0x7F4B, 0x54F9, 0x0514, 0xA98E },
 { 0xA6EC, 0xD171, 0x6E23, 0x17A6, 0x7E0E, 0xEA66, 0xAEF4, 0xE255, 0x335C, 0x85AB, 0x5224, 0x4427, 0x3BD9, 0x2BB0, 0x0A91, 0xBCEF },
 { 0x7E58, 0x8167, 0xA044, 0x800D, 0xCDEE, 0x9086, 0xF871, 0xCAE9, 0x0689, 0x6017, 0xFEBA, 0x0D5D, 0x86A4, 0x283C, 0xD6F9, 0x33AF },
 { 0x3D50, 0xB16B, 0xEDF7, 0x0D35, 0x99D1, 0xFBF9, 0xC65A, 0x8C6B, 0x74FE, 0x14E1, 0x7B0A, 0x2C4B, 0x02C7, 0xB09D, 0x59FB, 0x43A2 },
 { 0x810C, 0x8777, 0x81D8, 0xFDE3, 0xB4B3, 0x8506, 0xDB9F, 0x1665, 0xD8FF, 0xA339, 0x111D, 0x1DF7, 0xEBAB, 0xA196, 0x5BB0, 0x0B20 },
 { 0xAEB1, 0x1E75, 0x06D6, 0x8A6C, 0x3DB8, 0xFD5A, 0x231D, 0x825D, 0xBB0C, 0x13D9, 0x0B0E, 0xB90D, 0x157C, 0xCC26, 0xC822, 0x55EA },
 { 0x061B, 0xBB17, 0x8C4F, 0xFF2B, 0xA663, 0xD914, 0x7EFA, 0xB849, 0xD5CB, 0xD791, 0x3435, 0xF697, 0xEADC, 0xA862, 0xA0BF, 0xD366 },
 { 0xB92F, 0x6FEA, 0x7D98, 0xE450, 0xA9C7, 0xCF8D, 0x05EA, 0x83B1, 0x645A, 0xFF79, 0x42D7, 0xA0DA, 0x79F7, 0x2291, 0x00E9, 0x0CD8 },
 { 0xDB15, 0xBB31, 0x17DB, 0x3093, 0x1546, 0x5C84, 0x64BB, 0xD59C, 0x9F79, 0x4E8C, 0xB4A0, 0x6626, 0xC924, 0x2C84, 0x977F, 0x12A9 },
 { 0x7318, 0x37A6, 0xFFDC, 0xA590, 0x4E8D, 0xE3D0, 0xAC21, 0x368D, 0xB52D, 0x089E, 0x9AD1, 0xA6E8, 0x963D, 0xDE1E, 0x3E51, 0xB339 },
 { 0xD6A7, 0x275D, 0x1B82, 0x2FAA, 0x9087, 0x702B, 0xBE1F, 0x5CAB, 0x0B2E, 0xA7FB, 0x44D6, 0x5B3B, 0x1AED, 0x9FC2, 0xBA8B, 0x37D5 },
 { 0x67FA, 0x302E, 0x2DC1, 0x4250, 0x22B4, 0x5B57, 0xBE4A, 0xF743, 0x0F10, 0xE14D, 0x7B65, 0x0CA7, 0xC1B1, 0xBDD1, 0x3F5E, 0xC15A },
 { 0x103A, 0x0166, 0x8F7D, 0xA1C7, 0x1102, 0x67D5, 0x8220, 0x02ED, 0x7985, 0xA331, 0x9A61, 0xA691, 0x9EFA, 0x50E5, 0x1BA0, 0x156A },
 { 0x4E12, 0x62FC, 0x3EEE, 0x660F, 0xB05C, 0xFBFF, 0x9085, 0x7B4F, 0x6911, 0x243D, 0x209A, 0xAF39, 0xF4C4, 0xB178, 0x9AF9, 0x4D5C },
 { 0x689D, 0x837B, 0x4B01, 0x1986, 0x1044, 0x18C4, 0x26D2, 0x0025, 0xAE0C, 0x2AD4, 0xC8CA, 0x7F82, 0xC0F4, 0x17B9, 0x5849, 0xBE29 },
 { 0xC5AD, 0x65FB, 0xBE94, 0x5EB5, 0x7EE3, 0xD94E, 0x10FD, 0x1439, 0x70E0, 0x142D, 0x38B5, 0xECC4, 0x473A, 0xD2E6, 0x0E27, 0xC80C },
 { 0x0838, 0x4D05, 0x3DF3, 0x1B7E, 0x05E4, 0x0219, 0x0525, 0x354E, 0x3C29, 0x3EC9, 0xB801, 0x8588, 0x3335, 0x1103, 0xBA59, 0x5158 },
 { 0xCBF2, 0x626F, 0xE98B, 0x8EC9, 0xF2E2, 0x3C44, 0xCE77, 0x8F4E, 0x727E, 0x36C7, 0xA8A4, 0xFC15, 0xE00D, 0x3A0D, 0xB8E9, 0xDB25 },
 { 0x1CAC, 0x00BD, 0x7749, 0x73EE, 0xD9C4, 0x3CCB, 0xB844, 0xC393, 0x60D5, 0x8946, 0x228B, 0x4019, 0x214C, 0x8B74, 0xE103, 0x5FDD },
 { 0x59D2, 0xE75B, 0x20D2, 0xE4C9, 0xE95A, 0x7F5C, 0xD529, 0xCBF2, 0x7E8D, 0xAEA4, 0xA8FF, 0xCF1C, 0x5973, 0x090E, 0x553F, 0x021C },
 { 0x85DE, 0xDCDB, 0x68DB, 0x3278, 0x99B8, 0x466B, 0x7793, 0x8F26, 0xAA2A, 0x25F7, 0x2DF4, 0x699B, 0x19B8, 0x8E5D, 0x6E01, 0xE709 },
 { 0x55C2, 0x48C7, 0xA242, 0xF8B0, 0x193A, 0xD41E, 0xF1CA, 0x9D4E, 0x2B92, 0xAB56, 0xF560, 0x2B1F, 0x93CB, 0xE927, 0x6A1F, 0x57C6 },
 { 0x3407, 0x206F, 0xBA39, 0x446F, 0x2298, 0xAE8B, 0xC624, 0x1367, 0x6FC8, 0x91AA, 0x3A9F, 0xC362, 0x5168, 0x6B8D, 0xB23A, 0xF02E },
 { 0x40A2, 0xC1F4, 0x7959, 0x10AC, 0x66CA, 0x5C8D, 0xE8E0, 0xB1BF, 0xEB10, 0xCB8B, 0x06E5, 0xEE61, 0x5109, 0x4C73, 0xFB5A, 0xC102 },
 { 0xBBD7, 0xD62C, 0x3594, 0xF948, 0xD423, 0x2992, 0xC470, 0xA736, 0x82A2, 0x8EDB, 0x88E8, 0x878F, 0x997F, 0x2E67, 0x4BE6, 0xC004 },
 { 0xF91A, 0x0532, 0xEA7B, 0xD1D5, 0x6FCD, 0x5973, 0xF0FA, 0xD778, 0x378E, 0x087A, 0x595E, 0x570B, 0xA7A5, 0xD7C1, 0xC25D, 0x2354 },
 { 0x964F, 0x799C, 0x078B, 0x7B3A, 0x35F9, 0xB8F1, 0x1C0B, 0x1710, 0xFD83, 0xD222, 0x8E08, 0xD7EE, 0xD3A4, 0x6151, 0x183F, 0xBCA8 },
 { 0x7FA4, 0x46E0, 0xF545, 0x4BD7, 0x61F7, 0x2984, 0x5134, 0x6263, 0xE530, 0x5E1A, 0xC1B9, 0xCBA8, 0xD033, 0x6D64, 0xFF90, 0xAADF },
 { 0xCC7C, 0x6593, 0xF13E, 0x1FE3, 0x26DC, 0xD0AA, 0x8A0B, 0x4029, 0xE925, 0xD36B, 0xD451, 0x9DAA, 0xCB69, 0x190C, 0x03D4, 0xD63C },
 { 0xF03A, 0x9CB4, 0xD766, 0x60C5, 0xE27B, 0x7685, 0xC15C, 0x6CCA, 0x2867, 0xA526, 0x9608, 0xD7DD, 0xF736, 0x5062, 0x46DB, 0x901E },
 { 0xD291, 0xE328, 0x0B72, 0x6E10, 0x7011, 0xF85B, 0x95CB, 0xAEF9, 0xBCD4, 0xB51B, 0x62B0, 0x8E8A, 0x5532, 0xB389, 0x96F9, 0xCC24 },
 { 0x5A45, 0xEB7C, 0xDB6D, 0x337E, 0x95FD, 0x9ECA, 0xC863, 0x55F6, 0xA436, 0x8473, 0xF77A, 0x81B5, 0x3AA2, 0xB22C, 0x48F2, 0x98C3 },
 { 0x8C8F, 0x4432, 0xCB17, 0xE840, 0x0D9A, 0x95C3, 0x662A, 0xF7DD, 0x06E8, 0x286D, 0xA3EF, 0x2D5F, 0x13D5, 0x32D1, 0x1798, 0x74DC },
 { 0x0E2C, 0xC9E3, 0x7D97, 0x0BB9, 0x74F3, 0x135D, 0xFA20, 0x33C6, 0x1AC5, 0xB57A, 0xC9D9, 0xEB9D, 0x00E1, 0x1416, 0x7456, 0x0AA7 },
 { 0x6C29, 0xC9EB, 0x01FA, 0x1100, 0xE870, 0xAEB8, 0xBE8A, 0xC481, 0x8552, 0xE38E, 0x2C96, 0x6D90, 0xFAD9, 0x9B03, 0x4221, 0x7164 },
 { 0x6CDB, 0x829D, 0x7388, 0x70BD, 0x3494, 0x3D38, 0x23CF, 0x7932, 0x4A11, 0x9751, 0xCD7A, 0x581E, 0xCBE9, 0x7A8C, 0xF6FC, 0xF2D1 },
 { 0xB415, 0x9948, 0xC134, 0x49E8, 0x30D6, 0x0697, 0x8C6B, 0x5F73, 0x0B58, 0xB915, 0x8666, 0x9164, 0xE6C5, 0x8C8F, 0x38EB, 0x7FC0 },
 { 0x7359, 0x5875, 0x7EC1, 0x7E42, 0xA08C, 0x0399, 0xD611, 0x2EF1, 0xA61B, 0x88C7, 0xC6EE, 0x511F, 0xE13C, 0x666B, 0xF897, 0x0AC5 },
 { 0xEC91, 0x39C3, 0xB97A, 0x6191, 0xD9CE, 0xF837, 0x408D, 0x6644, 0xF631, 0x1415, 0x6565, 0x7B7E, 0xB6D0, 0x926A, 0x926B, 0xBD80 },
 { 0x5E65, 0x4DBA, 0xE4C4, 0x7374, 0xFBC9, 0x78B9, 0x5245, 0xB07C, 0xC335, 0x9243, 0xA3CB, 0xA80E, 0x3FA8, 0x3B4B, 0x7E35, 0xA4EB },
 { 0xC07C, 0x7BA0, 0xA4D1, 0xAD02, 0xD314, 0xD758, 0xA5F1, 0x7B20, 0x17E7, 0x187D, 0x8810, 0x8C76, 0x9E32, 0x5A93, 0x781F, 0x13B1 },
 { 0xF65A, 0x096D, 0xF2B8, 0x9381, 0x81A6, 0x8523, 0x0EFB, 0x73D7, 0xE77D, 0x08FE, 0x9E5B, 0x478B, 0x546B, 0x987D, 0x269B, 0xBAE5 },
 { 0x95DE, 0xC078, 0xBB00, 0x3B30, 0xED98, 0xE568, 0xEA6B, 0x870C, 0xA7C8, 0x69A4, 0x5B8C, 0xE34C, 0xF0A8, 0xC5CD, 0x1249, 0x68A2 },
 { 0x1A23, 0x901A, 0xB1B2, 0x363A, 0x4892, 0xEAB2, 0x2345, 0x3B59, 0x6CA5, 0x30F9, 0xC584, 0xCA15, 0x38FD, 0x5E66, 0x26B4, 0x7F69 },
 { 0xF1E0, 0xCD29, 0xF696, 0xDDB8, 0x9F91, 0x3CEF, 0x2618, 0x10F2, 0x1F01, 0x6BAC, 0xEBB8, 0x1801, 0x2996, 0x2BAD, 0x832E, 0x21AF },
 { 0xF6B3, 0x35B8, 0x2D67, 0xC450, 0xE6C9, 0xF060, 0x7253, 0xAB2B, 0x9D33, 0x7FA7, 0xCE8A, 0xBC9E, 0x1FE3, 0x2055, 0x4E0E, 0x4961 },
 { 0x42EF, 0xDC22, 0xF16A, 0x237F, 0xCF36, 0x348F, 0xC910, 0xDD33, 0x6A02, 0xA0C0, 0x1739, 0xDCE4, 0xFEF8, 0x0B43, 0x11C2, 0x40F7 },
 { 0xADCA, 0xA3D4, 0xD361, 0x0344, 0x30FE, 0x6263, 0x989E, 0x0180, 0x5AD5, 0x4B6B, 0x4085, 0x1FE9, 0x6E63, 0x6978, 0xF10D, 0xFEAA },
 { 0x1D9D, 0xA257, 0xD510, 0x4D73, 0x3A41, 0x5FAE, 0x5278, 0xC224, 0x6CA7, 0x5033, 0x5A4E, 0x4609, 0xD926, 0x956D, 0xAC31, 0x91EF },
 { 0x6DE4, 0x8D92, 0x0ED4, 0x7C0E, 0x4CF3, 0x4AC9, 0x1862, 0xE08B, 0x4383, 0xEFE9, 0xC8A8, 0x83CA, 0xF408, 0xA926, 0x6ECF, 0x0089 },
 { 0xAFB1, 0x188D, 0xBF47, 0x5CA1, 0x3631, 0xC44E, 0x06B5, 0x4E1B, 0x515C, 0x113C, 0x969B, 0xE0CA, 0x0814, 0x5294, 0x2858, 0xC567 },
 { 0x9F39, 0xAE95, 0xB204, 0xE0D0, 0x5AA4, 0x74FF, 0xB1B7, 0xD2D3, 0x89F4, 0xF484, 0x09EF, 0x4A57, 0x9705, 0xCEAD, 0xCE1A, 0xC380 },
 { 0xE162, 0x59C4, 0x9657, 0xC099, 0xD625, 0x4F8F, 0x5BBD, 0xA995, 0x86DC, 0xC0B7, 0x2AB1, 0x3BB6, 0xB42C, 0x3797, 0xD876, 0xF0EE },
 { 0xC790, 0x0341, 0xE490, 0x4573, 0xF721, 0x8DFE, 0xA5E3, 0x3AB1, 0x66D4, 0xEC72, 0xD2AC, 0x41AC, 0xBA5E, 0xBC5D, 0xB715, 0x82AE },
 { 0x4321, 0xD31A, 0xFF66, 0xAE4E, 0xBC3C, 0x67BE, 0xEF40, 0x4FA9, 0x52D8, 0x086F, 0x59F3, 0x99EB, 0x4A4E, 0x7601, 0x1EA6, 0x525D },
 { 0x1C0D, 0x1900, 0x82C5, 0x93C3, 0xEA1B, 0x88A7, 0xCC5D, 0x5364, 0xB3E0, 0x5BA6, 0x59C4, 0xE9B1, 0x7CE2, 0x1A10, 0xEF35, 0xCA7E },
 { 0x09A2, 0xA802, 0xF894, 0xE111, 0x382F, 0x2A27, 0x34B1, 0x5FD2, 0x1400, 0x94E6, 0xF29A, 0xEEB2, 0x340A, 0x0BF7, 0xF062, 0xF0D2 },
 { 0xCDCC, 0x804F, 0x259F, 0xA15D, 0x3998, 0x2351, 0x9891, 0xBA79, 0x06BC, 0xAC02, 0xFA6D, 0x6095, 0x0DF9, 0x058E, 0xD2C6, 0x38C7 },
 { 0x1938, 0x8F74, 0x9049, 0xA24A, 0x7D6C, 0x3D93, 0x1A2D, 0xF1E4, 0xE44D, 0x22F2, 0x7FC3, 0x5535, 0x960C, 0xDDAA, 0x1F59, 0xA7E8 },
 { 0x6B43, 0x68F1, 0x1BE4, 0xFC91, 0xF470, 0x4DD7, 0x90E5, 0xE650, 0x0F71, 0x3E1A, 0xDA54, 0x8C2C, 0x2FB9, 0xD41A, 0x51D8, 0x0E71 },
 { 0xC21E, 0xB9D2, 0xD579, 0xA495, 0x7BAD, 0x4E17, 0x7365, 0x9038, 0x6621, 0x33B9, 0xBD0F, 0x16A5, 0xA38D, 0x435B, 0x246D, 0x2910 },
 { 0x8CA8, 0x5285, 0xF551, 0xA507, 0xE9A8, 0xD633, 0x4455, 0xCB5F, 0xFE8D, 0xA9F8, 0x92D9, 0x3F51, 0x633E, 0x8E00, 0xC22B, 0x1032 },
 { 0xD119, 0x7151, 0x9315, 0xDC38, 0x0830, 0x7AC3, 0x2C3A, 0x1D2B, 0xF58A, 0x8BAB, 0x9670, 0xC0B7, 0x90C7, 0x7A3F, 0x42C2, 0xCC14 },
 { 0x19AD, 0xB143, 0xFF82, 0xDD32, 0xDEC8, 0xACD0, 0x24C7, 0xEBE9, 0x757D, 0x0A1A, 0xA607, 0xD1B4, 0xBB3D, 0x3414, 0x2CFA, 0xD81F },
 { 0x718D, 0xACDC, 0x458B, 0x323B, 0xB044, 0x4833, 0x20DF, 0x11E4, 0x264A, 0xD826, 0xAF7B, 0x5DFD, 0x3FC3, 0x839D, 0x3A97, 0x844D },
 { 0x6735, 0xC6C3, 0x25A3, 0xB1F9, 0x8E7C, 0xE4F7, 0x3169, 0x2449, 0x4C8A, 0xA72B, 0x66BB, 0xFE15, 0xD4BB, 0x5A84, 0x61ED, 0xC176 },
 { 0x5EB0, 0xBE4F, 0x4F2A, 0xE3EA, 0x34B4, 0x1087, 0x1BCF, 0xD178, 0x9063, 0xED9D, 0xB6E7, 0x06A2, 0xFD53, 0xC6C9, 0xAC26, 0xF1DE },
 { 0xCF81, 0x21B9, 0x6A7F, 0xF478, 0x0E70, 0x7AFF, 0x49A2, 0x8C94, 0x7B72, 0x2142, 0xE5B0, 0x0919, 0xE177, 0x22C9, 0x3D28, 0xCBC5 },
 { 0x7639, 0xEE04, 0xFF4B, 0x8172, 0x3473, 0x56AB, 0x4F99, 0x56AE, 0xAAF4, 0x5429, 0x2196, 0xA0DD, 0x2E0F, 0x2AC7, 0x26F4, 0x85BF },
 { 0xFB03, 0x74DB, 0x2E93, 0xB301, 0xF004, 0x6D73, 0xB306, 0xE3B0, 0x74AC, 0xC294, 0x6878, 0x1371, 0x2AD5, 0x12B5, 0xF000, 0x6D9A },
 { 0xB075, 0xEB21, 0x9067, 0x0F4F, 0xC77C, 0x2AB3, 0xBD6B, 0x78D5, 0xD21E, 0x13D0, 0x4984, 0xBA45, 0x5969, 0xA8C4, 0x5E84, 0x50AB },
 { 0xFA4D, 0x5FF0, 0x0E14, 0x6C9B, 0xF434, 0x8A26, 0xDBBF, 0x08C5, 0x3AFE, 0x1B9B, 0x0CC5, 0x71DD, 0xEE32, 0x3C28, 0x2BD8, 0x983E },
 { 0x6428, 0xB3FA, 0xF067, 0x42ED, 0x9A5E, 0x17A5, 0xBE42, 0xD050, 0xB76F, 0xB5BD, 0xE0E1, 0xDC33, 0x23EE, 0xF8BF, 0x8A47, 0xCBE7 },
 { 0x640F, 0x17CC, 0x1923, 0xCAE3, 0x04A1, 0x8364, 0x7964, 0x264F, 0x0F62, 0x87A2, 0xD450, 0xABE1, 0x1DED, 0x4B8D, 0x8AA1, 0x95F6 },
 { 0xE7F6, 0xB145, 0x561D, 0xA56D, 0xB85B, 0x1B97, 0xB64B, 0xE2A7, 0xA1AD, 0x3DC3, 0xB52B, 0x3E77, 0xA943, 0xFF8A, 0xE4D6, 0x423D },
 { 0x9152, 0x40DD, 0x0DCD, 0xD666, 0x2304, 0x60F4, 0x939C, 0xE0C2, 0x3A96, 0xCA18, 0x338A, 0x12BC, 0x4353, 0x1261, 0xB262, 0x6BE2 },
 { 0x2B1B, 0x4AEA, 0xF43B, 0x72A7, 0xA2A2, 0xE4D8, 0x138B, 0x4878, 0x6180, 0x367A, 0x2936, 0xC6DC, 0xCE38, 0x3AED, 0x7D0A, 0x0FD6 },
 { 0xA2CA, 0x9212, 0x1A8E, 0xDD0F, 0x3DBF, 0xB43A, 0x72F2, 0x8702, 0x1DA8, 0x7559, 0x6AD7, 0xEE42, 0xE80C, 0xA38F, 0x9F54, 0x8F4B },
 { 0x8B60, 0x4949, 0x135B, 0x5E58, 0x0B4E, 0x722E, 0x9F9A, 0xAC78, 0x2D51, 0xC554, 0x74E5, 0xEC89, 0x37BD, 0xCCBF, 0x128A, 0xFFA7 },
 { 0x4D0D, 0x23B4, 0x6FF0, 0xB13F, 0xF7D1, 0xD551, 0x2E22, 0x76DF, 0xD7F7, 0x6D39, 0x54FF, 0x2D49, 0x7A01, 0x2548, 0x606B, 0xBDEF },
 { 0x9725, 0x99E9, 0x3B7B, 0x84EF, 0x2791, 0x1EB2, 0x0487, 0x309C, 0xF277, 0x6E14, 0xAFBE, 0x7869, 0x3F54, 0x8667, 0x4F44, 0x50E8 },
 { 0x62CE, 0x6B2E, 0xA134, 0xC457, 0x339E, 0xEE13, 0x9779, 0xB60D, 0x1B26, 0x9C7B, 0x865F, 0x9E14, 0x1D2F, 0x7250, 0x3277, 0x0808 },
 { 0x64E9, 0xB6F4, 0x5564, 0x9DD3, 0x9143, 0x8D9A, 0xD816, 0x2E5B, 0x1F2C, 0x3F54, 0xBEC7, 0x89BC, 0x2593, 0xB5B8, 0x378A, 0x5190 },
 { 0x1DF4, 0x0416, 0xCA7A, 0x0ED2, 0x8412, 0x9C12, 0x8A51, 0xA910, 0x0270, 0x856C, 0x69C8, 0x8B15, 0x9851, 0x6671, 0x136D, 0x8027 },
 { 0x3B9D, 0xA7B5, 0x1380, 0x885E, 0x3103, 0xB170, 0xBFA3, 0xD532, 0x9317, 0x72D9, 0xA52B, 0xF449, 0x2F4C, 0x0DBC, 0x907A, 0x656D },
 { 0x64F0, 0x34CF, 0x8020, 0x1918, 0xA7D5, 0x23A4, 0x83F5, 0xC8D6, 0x2CA3, 0xAC52, 0x9B62, 0x0BD6, 0x23D1, 0x4D00, 0x9609, 0xB8B9 },
 { 0x2BE6, 0x3E9F, 0x4E1F, 0x7DDD, 0xA237, 0xAF2B, 0x208C, 0x6C82, 0x4472, 0xF546, 0x7BB9, 0x1139, 0xF6E5, 0x9606, 0x79C4, 0xF4B2 },
 { 0xF4F1, 0x045B, 0x2624, 0x6381, 0xE650, 0xFA53, 0xD850, 0x17F9, 0x23BF, 0x4AA9, 0x5BBA, 0x84AF, 0x160D, 0xB3CC, 0xB160, 0x4616 },
 { 0xDCCE, 0xEC70, 0xC862, 0xF0AB, 0xBF9C, 0x129C, 0xC334, 0xB5C4, 0x1443, 0x139D, 0xD4A5, 0xB28D, 0xA7E9, 0x72BB, 0xD1EF, 0x969C },
 { 0x328E, 0xA6AF, 0x16E4, 0x1F76, 0x26DB, 0x3288, 0xD268, 0x3192, 0x664D, 0x3626, 0x5A1D, 0x578E, 0x5370, 0x9BDC, 0x5674, 0x90A4 },
 { 0x43E6, 0x35A2, 0x346A, 0x0A74, 0xCDA2, 0x8917, 0x3516, 0xE255, 0x4126, 0x705F, 0x4F3E, 0xD2B2, 0x25AE, 0x25C3, 0x700E, 0xB103 },
 { 0x78B8, 0xC51D, 0x5221, 0x6F5D, 0x9CE8, 0x91EA, 0x1F3A, 0xAA46, 0x1A08, 0x96D0, 0x8A5D, 0x8976, 0xB87D, 0x6BA5, 0x6254, 0x7865 },
 { 0xBD28, 0x4400, 0x6EA7, 0x7246, 0x3E51, 0xC77A, 0xC8F8, 0xA975, 0x7198, 0x348E, 0xDE4E, 0xB67B, 0xE348, 0xFFB4, 0x0BE4, 0x408A },
 { 0xC616, 0xA918, 0xDED5, 0x8E51, 0x49BB, 0xE715, 0xF3BB, 0xB1FA, 0x1667, 0x8A22, 0xF06B, 0x36D2, 0xFEB8, 0xAB9F, 0x29D7, 0xD580 },
 { 0x0E0B, 0xD6D7, 0x158A, 0xE1AC, 0xB71B, 0xFDC7, 0x72B2, 0xB13D, 0xFC23, 0xA8AA, 0xFDC4, 0x685A, 0xB39A, 0x68BE, 0xC6FC, 0x1A53 },
 { 0x8AEB, 0x49D3, 0xC35E, 0x0F65, 0x8CCE, 0xD401, 0x2EAA, 0xD611, 0x5044, 0xBCAB, 0x5BDE, 0xB42D, 0xD70E, 0x9226, 0xAABC, 0xC5F8 },
 { 0x0AB7, 0x08CE, 0xA870, 0x0C71, 0xEA2A, 0x2A36, 0x896E, 0xC84E, 0x3666, 0x2D98, 0x922D, 0xA10F, 0xE950, 0x8B60, 0xFE5F, 0xADA8 },
 { 0xC325, 0xD617, 0xABE5, 0xB4E5, 0xE83F, 0x1A72, 0x48B1, 0x3A08, 0xA82C, 0x3F77, 0x9168, 0xFA6E, 0xA1E8, 0xBE84, 0xDA2D, 0x69FD },
 { 0xFDEC, 0x37CB, 0x5DA3, 0xAACC, 0xC04D, 0xBA8A, 0x3027, 0x60B5, 0xC064, 0xFB0F, 0xD8FD, 0x5F36, 0x41D4, 0x8D9A, 0xECC0, 0xC4E2 },
 { 0xBE4B, 0xAE35, 0xF107, 0x00F6, 0xE640, 0xF5D6, 0xDDB8, 0xF044, 0xC01C, 0x6E67, 0x6444, 0xAAB2, 0x98CD, 0x8EFE, 0x2665, 0x77E0 },
 { 0x5369, 0x2830, 0xA322, 0xB184, 0x2DBD, 0x5393, 0xED5A, 0x089A, 0xA5EF, 0x4B30, 0xF47F, 0xED2E, 0x4173, 0xE979, 0xF833, 0x1A92 },
 { 0x52B6, 0xCC85, 0x3C23, 0xF3B2, 0xCD7C, 0xD936, 0x83BB, 0x0816, 0x5A12, 0x6D5E, 0xEAAE, 0x51E6, 0x5646, 0x8574, 0xC7E7, 0x3166 },
 { 0xD4AA, 0x611C, 0x0BCD, 0x19A4, 0xEA76, 0x3B3B, 0x9724, 0x6AB7, 0xC0D9, 0xE86D, 0x5B05, 0x9B10, 0x0156, 0xF088, 0xAED0, 0xD6A1 },
 { 0x7633, 0x49B2, 0x57FC, 0xCC46, 0x52DA, 0x32B1, 0xAA63, 0x7A31, 0xA473, 0x9B0B, 0x5771, 0xC05E, 0x68E3, 0x9B73, 0xB252, 0x207B },
 { 0x8347, 0xC319, 0x1884, 0xE055, 0xDDAC, 0xDE8E, 0x301A, 0x177A, 0x3560, 0xD16A, 0x32D8, 0xE50D, 0x7E30, 0xE8AA, 0x06BF, 0x6988 },
 { 0xBE8C, 0x140C, 0xDBB2, 0x0C94, 0x2D78, 0xFB9F, 0xDE8A, 0xA1F8, 0xB6B8, 0x919A, 0x7530, 0x4F6B, 0xE3C8, 0xD6C4, 0x01D4, 0x2565 },
 { 0x361A, 0x3A8A, 0x17C8, 0x3E3C, 0xD804, 0xCE7A, 0xF8F4, 0x97A3, 0x1997, 0x4081, 0x96E5, 0x816E, 0xFFD8, 0xC554, 0xFBFF, 0xBBC7 },
 { 0x944C, 0xEDE7, 0x01D2, 0x54D6, 0xBFC0, 0xA5BD, 0xF302, 0x87A7, 0xE48D, 0x768B, 0x299D, 0x4C11, 0x695E, 0xE0AE, 0x33B0, 0x5E9B },
 { 0xCF96, 0x0D72, 0xAEF3, 0x43A6, 0xD0E2, 0xC881, 0x9183, 0xF010, 0x1B17, 0x440E, 0xF2FB, 0xECF5, 0x64B9, 0x5D1C, 0xA21F, 0xF162 },
 { 0x9599, 0xB967, 0xBB1D, 0xF5DF, 0xD4F2, 0xACFC, 0x65A4, 0x905B, 0x4787, 0x901F, 0x59AE, 0x6179, 0xA4DD, 0xACE2, 0x2E44, 0x38E8 },
 { 0x0CD0, 0x384A, 0xB1D6, 0xF265, 0x1661, 0xB859, 0xEAE3, 0xCBC9, 0x5C64, 0x11C0, 0x39BF, 0x7BB2, 0xB2C1, 0x060C, 0x22ED, 0x8771 },
 { 0xD46A, 0x3839, 0xB677, 0xAFF5, 0x2590, 0x3DCF, 0x89A7, 0x229A, 0xA7CD, 0x1E97, 0xFC1E, 0x40C2, 0x6ED3, 0x300A, 0x4B32, 0x6E33 },
 { 0x15CA, 0xBA13, 0xE025, 0x2C6E, 0xAB44, 0xAFB8, 0xDB00, 0xDD3F, 0xCE82, 0xEF53, 0x997B, 0xC331, 0x733D, 0xE9F0, 0xDD99, 0x417B },
 { 0x6D32, 0xD23B, 0x8D0D, 0x6CA3, 0xF66A, 0x7E4E, 0x1357, 0xCEFF, 0xAEA2, 0x8F3C, 0x4A97, 0xF7C9, 0xBC3A, 0xAA21, 0x5CF5, 0x2C5A },
 { 0xC68C, 0xCB8B, 0x65E8, 0xF8AD, 0x25E5, 0xF67E, 0xDC2C, 0x24B2, 0x5D38, 0xD937, 0xE171, 0x363C, 0xA453, 0xC674, 0xAF5B, 0xBDDB },
 { 0x40FC, 0xBAA3, 0xD38F, 0x9C96, 0xA2FB, 0xDE8E, 0x77C7, 0x977A, 0xA6BB, 0x1125, 0x7DCB, 0x1C07, 0x6520, 0xE336, 0x2104, 0x2461 },
 { 0x925D, 0x6D21, 0xFCA4, 0xA7B1, 0x8408, 0xE4EB, 0x1B95, 0x76B3, 0xF60E, 0x685A, 0x0F6B, 0x1D33, 0x9CDB, 0xDD1A, 0x2AAC, 0xE82C },
 { 0xDFDF, 0x8CBB, 0xB6CC, 0x0197, 0xD690, 0xC05E, 0x895D, 0xE7FD, 0x53C3, 0xCE6C, 0x51F1, 0x14C0, 0x78B2, 0xC025, 0xBF90, 0x7A00 },
 { 0xB832, 0xBD10, 0xA3DE, 0x3731, 0xC9CF, 0x07AA, 0x39D3, 0x5C10, 0x9F0E, 0x5CDC, 0xA687, 0x3AA0, 0xCF22, 0x5A94, 0xFA9E, 0xC9A0 },
 { 0xE678, 0x959D, 0x3C26, 0xD864, 0x2C6A, 0x1F6D, 0x4DCF, 0xD1FD, 0xE3C2, 0x14A6, 0x53EE, 0xB59B, 0x92F9, 0x06D4, 0xFDFF, 0x35E9 },
 { 0xA8C8, 0x956A, 0x64FF, 0xDFCA, 0x393C, 0xF379, 0x1E5D, 0xD835, 0x52E8, 0x5ABB, 0x6288, 0x79B4, 0x19D7, 0x4EBC, 0x18DB, 0xF92D },
 { 0xD3CD, 0x8850, 0x2E46, 0xE314, 0x83FE, 0xE72B, 0x4D96, 0x98C5, 0x6F40, 0xD1DF, 0x536E, 0xB528, 0xB3BB, 0x8436, 0xC915, 0x9839 },
 { 0x5EDC, 0x709D, 0x91D6, 0x39B7, 0xF593, 0x1AD3, 0x9063, 0xF2FD, 0x773F, 0x63F0, 0x857C, 0xD1AD, 0xBCE4, 0xD41A, 0xB826, 0x9506 },
 { 0xFBCA, 0x5ABF, 0xE1CD, 0x0AA9, 0xD88D, 0x1AEA, 0xB1E9, 0xC19C, 0x47D3, 0xCC39, 0x708A, 0x675C, 0xA00B, 0x6934, 0x2479, 0xCEB0 },
 { 0x91A4, 0xCA4E, 0x1AD8, 0xA938, 0xBCE4, 0xDF22, 0x0399, 0xB8F9, 0xF7EB, 0x3B47, 0x6BD4, 0x200E, 0x61AF, 0x7BE8, 0xDBDF, 0x9B25 },
 { 0x19B8, 0xBE67, 0xB95D, 0x58FC, 0xA268, 0xBE6C, 0xBFAA, 0x43F1, 0xBEB2, 0xD039, 0xF1E3, 0x2959, 0xAA48, 0x2907, 0x52F2, 0x0E0B },
 { 0x3F76, 0xB6CA, 0x4008, 0xF295, 0xB941, 0x0EEE, 0xD820, 0x1CA7, 0x5725, 0x28D3, 0x12BC, 0x9D45, 0xAF15, 0x91DB, 0x5FED, 0xCBEA },
 { 0xF058, 0xD563, 0x4DA3, 0xE1A3, 0xAFD5, 0xCB7C, 0x2C47, 0xD336, 0x0AA3, 0xD6E6, 0xEA84, 0xECAA, 0xED3E, 0xDA3E, 0x0EB1, 0xCEE4 },
 { 0xE854, 0x5DC9, 0xE097, 0xAAE3, 0x3BDF, 0xE949, 0xE1E2, 0x0ACA, 0xE645, 0x9CB6, 0x01D6, 0x7995, 0xABB0, 0x2265, 0x94DB, 0x2CD7 },
 { 0x704C, 0x25F8, 0x3900, 0xD4E3, 0xDB63, 0x714E, 0x5E35, 0x73F9, 0x8A83, 0x6CD0, 0xE7F1, 0xE25A, 0x2468, 0xEB74, 0x2F67, 0x7CE6 },
 { 0x1A21, 0x43D7, 0xB4F0, 0x514C, 0xB143, 0xB508, 0x900A, 0x070F, 0xF380, 0x42D9, 0xFB5C, 0x131F, 0xC9A6, 0xB2B1, 0x2786, 0xE83D },
 { 0x420A, 0xBDAD, 0x7C5E, 0xC746, 0xA13E, 0x39CC, 0xF37F, 0x7705, 0xFF92, 0x6C9D, 0x2060, 0xCF0E, 0x0158, 0xFF86, 0xE660, 0xFAD0 },
 { 0x6D4E, 0x84EF, 0x5F73, 0x67D9, 0x6D74, 0x438F, 0x7B93, 0xBB42, 0x95EC, 0x31F0, 0xE162, 0x9889, 0x75F0, 0x4B15, 0xAA52, 0xD7D0 },
 { 0x454A, 0xFFB3, 0xA04F, 0x66B9, 0x6F16, 0x6820, 0xDBA6, 0xE054, 0x5056, 0x3DEA, 0x51B8, 0x44A5, 0x94A8, 0xC0FB, 0x05B6, 0xF3F8 },
 { 0x5C77, 0x008C, 0xA5CF, 0x44B6, 0x533E, 0xBFAC, 0x7AC9, 0xFE7A, 0x421A, 0xC11A, 0x3159, 0x6F4D, 0x5869, 0x5AF6, 0x0115, 0xB47D },
 { 0xC24A, 0x488E, 0x89C3, 0x01A3, 0x5F37, 0x7FA7, 0x8BB9, 0x052E, 0xA947, 0x7F1E, 0x1782, 0x2F89, 0xF1D6, 0x36ED, 0x2699, 0xD4F0 },
 { 0x2C39, 0xED68, 0x3C11, 0x7564, 0xA545, 0x659B, 0x8492, 0x859D, 0x84EA, 0xA1D3, 0x249F, 0xADFA, 0x36C7, 0x6C58, 0x87EA, 0xF55E },
 { 0x3CD5, 0x9D3A, 0x825A, 0x4C1A, 0x3737, 0x0413, 0x94C1, 0xDCCF, 0x74D1, 0xA0A0, 0x9B6E, 0xD41E, 0xA829, 0x4B3F, 0x0CA4, 0x0B2C },
 { 0x9A81, 0x5C67, 0x4313, 0x6B00, 0x1EE4, 0x8BAF, 0x0F37, 0x5CAE, 0xC3FA, 0x0426, 0x7CB7, 0xBD62, 0x5B07, 0xDDBD, 0xCE66, 0x3CEE },
 { 0xF733, 0x2223, 0xF2B3, 0x549B, 0xB492, 0xDA7D, 0x9DB8, 0x2826, 0x58A7, 0x5F41, 0x0092, 0x04A4, 0xCA2C, 0xB072, 0xDD72, 0x39AB },
 { 0x952E, 0x1973, 0x1379, 0xDA5E, 0x2944, 0x1CE9, 0xD679, 0xB124, 0x8E02, 0x25AB, 0x881E, 0x3311, 0x875A, 0xD75D, 0x81C7, 0x9713 },
 { 0xD239, 0x5E7F, 0xDCEA, 0x8606, 0x588B, 0xB807, 0x5698, 0xC002, 0xBEAE, 0x1AED, 0x1258, 0xBFA2, 0x8B1D, 0x0A92, 0x9281, 0x1387 },
 { 0x26B2, 0x430C, 0x2833, 0x4194, 0xCA44, 0xF406, 0x13AA, 0xDA49, 0x4BA8, 0x418E, 0xC698, 0x8EE7, 0x525E, 0x6AA7, 0xA0CB, 0x8148 },
 { 0xDD78, 0x697E, 0x3269, 0x6BAC, 0xD387, 0x576C, 0xE11F, 0xDD26, 0xC2D9, 0x5375, 0x1BAF, 0x0E57, 0x0A91, 0x16D7, 0x2607, 0x836F },
 { 0x9328, 0x7496, 0x0C5E, 0x444D, 0xAF2A, 0x4033, 0xCCCD, 0xDE32, 0x4AD5, 0x02A1, 0x3A5D, 0x16FC, 0xF16E, 0xC7AF, 0x6DA3, 0x5407 },
 { 0x7A21, 0x910F, 0xE228, 0x219E, 0xD828, 0x26D4, 0x3FFF, 0xCF45, 0x61EC, 0x4B0C, 0x7EB9, 0x76CE, 0xD856, 0x0552, 0xCFB7, 0x34D0 },
 { 0x1B87, 0x4328, 0xFBBE, 0xDDC7, 0x5E48, 0x5C7D, 0xD21D, 0x9D45, 0x9CAF, 0x5436, 0x20D7, 0xD0E5, 0x1D0E, 0xCA22, 0xEBB6, 0xFB28 },
 { 0xE5D1, 0xC7A7, 0x9435, 0x7980, 0x34AE, 0x0468, 0xAB46, 0x6C53, 0x3496, 0x3D17, 0xE25F, 0x641E, 0xC179, 0x55FF, 0x05DB, 0x4582 },
 { 0x32E8, 0x058D, 0xFB73, 0xAE46, 0xCBF0, 0x8FDB, 0xF5BD, 0x1DA3, 0xBEF1, 0x44E3, 0x84EE, 0x83F1, 0x05FD, 0x6F19, 0xB236, 0x97C9 },
 { 0x5F54, 0x838F, 0x90FB, 0x10AF, 0x711C, 0x5636, 0x0022, 0x171E, 0x97E0, 0x8F6A, 0xA930, 0x2130, 0x7A1C, 0x6DFE, 0xDBCA, 0x46B0 },
 { 0x4E5A, 0xDB54, 0x9DFC, 0x1781, 0xCEAD, 0x3D70, 0x2F38, 0x55F5, 0xD1E9, 0x7691, 0xBA8E, 0xEFC9, 0x7F79, 0x2754, 0x6656, 0xC57C },
 { 0x8AE0, 0x4A96, 0x04C9, 0x3DE9, 0xC502, 0xF52B, 0xD464, 0xDCB0, 0x056A, 0xE455, 0x1665, 0x3C86, 0xE6AA, 0xD48C, 0xA386, 0x50F2 },
 { 0x6917, 0x3E3E, 0x3597, 0x2AA7, 0xD11B, 0x9AB5, 0xC91A, 0x21E4, 0x5457, 0x3B06, 0x3EC5, 0xFA89, 0x9BA7, 0x1058, 0x97A4, 0x708C },
 { 0x2914, 0xE3B2, 0x964F, 0x2F85, 0x6935, 0x9DE1, 0x81AC, 0x592E, 0x06EF, 0xC14B, 0x1216, 0xEA57, 0x270A, 0xF2B0, 0x6F4A, 0xFD5B },
 { 0xD30A, 0x699C, 0x86B1, 0x413B, 0xF1BC, 0x3BAE, 0xF45F, 0xF02A, 0x817B, 0xE2E3, 0xE991, 0x89FC, 0xB666, 0xD9D9, 0x4109, 0xF511 },
 { 0x4CB0, 0xA5D8, 0x1372, 0x02F7, 0x3E3D, 0x7400, 0xE7BB, 0xCB35, 0xBC90, 0xDC68, 0x23B7, 0x0FD0, 0x889E, 0xDEC1, 0xFAD8, 0x61A5 },
 { 0xCBBA, 0x4168, 0x277F, 0x320A, 0x89A5, 0x5669, 0x7ECE, 0xED64, 0xEF51, 0xA624, 0xAE09, 0x8650, 0xB44E, 0xF7AF, 0xA2C6, 0x2D14 },
 { 0x8041, 0x1D03, 0x9DA7, 0x8131, 0xDF3E, 0x6C52, 0xBF1E, 0x5F0A, 0x81DF, 0xBB7B, 0x84A9, 0x1554, 0x17F7, 0xE48F, 0x678B, 0xA2B8 },
 { 0xE809, 0x87EB, 0xBE40, 0x74FD, 0xB25A, 0x0EFE, 0x6B6C, 0xF645, 0x2709, 0x260C, 0x13A4, 0x9817, 0xC5F5, 0x616B, 0x16E6, 0xC4E0 },
 { 0x39A1, 0xF6A1, 0x8F8D, 0x6B9B, 0x411A, 0x79A6, 0x8266, 0x5F67, 0x8249, 0xC874, 0xB02A, 0xCE28, 0xD1BE, 0x697A, 0xD56D, 0x0AC2 },
 { 0x3E99, 0x0B51, 0x9E45, 0x2C62, 0x396E, 0x2DC8, 0x7AB9, 0x7143, 0xB195, 0xA760, 0x5A28, 0xB931, 0x58AD, 0x2706, 0x9913, 0x2074 },
 { 0xA494, 0xBFC8, 0xDBB1, 0x2154, 0x5502, 0xFBEE, 0x619D, 0x6E63, 0x0585, 0x5ED9, 0xF2B3, 0xE9E4, 0x5ED2, 0x9D43, 0x2487, 0xBD8E },
 { 0x509E, 0x08E2, 0x597E, 0xBAA3, 0xC324, 0xEA83, 0x8B72, 0x0BD8, 0x7BE8, 0x1E49, 0xBA04, 0x99B9, 0x1F7E, 0xC933, 0x06B9, 0x5B43 },
 { 0x2F60, 0x8FB6, 0x2993, 0x11F6, 0x8DC7, 0xB419, 0xB5BE, 0x42A9, 0xA9B3, 0x2FE2, 0x26DC, 0xDA93, 0x3B14, 0x90D3, 0x1270, 0x1452 },
 { 0x82D9, 0x9C99, 0x6892, 0x4FCA, 0xCD86, 0xDE6F, 0x5D4E, 0xBA10, 0x3455, 0xCFD8, 0xA56A, 0x36B8, 0x41E9, 0xC7E3, 0x4EE4, 0x3C51 },
 { 0x581F, 0x9770, 0xBA84, 0xCF1B, 0x73AF, 0x1290, 0x2FC6, 0x9C84, 0x5323, 0x16D4, 0x10F0, 0x9341, 0xC3A6, 0xB0DD, 0xD0C3, 0xEB13 },
 { 0x0BD9, 0xA5B2, 0x16E0, 0x82E4, 0x60A0, 0xB6EE, 0x8DBB, 0x50EF, 0x3267, 0x6F82, 0xDDA0, 0xBDED, 0x0EAE, 0x7F06, 0x00C0, 0xE1CF },
 { 0xE0FD, 0xEA8A, 0x8274, 0xA3A3, 0xD64E, 0x4353, 0xA0A1, 0x7049, 0x6CD2, 0xCC0D, 0xFCA6, 0xB6B2, 0xCD7E, 0xCA0C, 0xF669, 0x8377 },
 { 0xFF14, 0xBA56, 0x2ADE, 0x9C35, 0xB103, 0xCBFF, 0xDBAF, 0xA130, 0x09B4, 0x6994, 0x9CB3, 0x042D, 0x34EE, 0x71D7, 0x8DD6, 0xD41B },
 { 0x1614, 0x2F20, 0xB243, 0xD91B, 0x2E68, 0x2D20, 0x14C5, 0xC884, 0x0510, 0xA695, 0x1611, 0x9492, 0xBA46, 0xD708, 0x8370, 0x685A },
 { 0x7918, 0x5A29, 0xBED8, 0x5456, 0x5427, 0x6489, 0x30CC, 0x14FE, 0x0EDA, 0xE143, 0x99EE, 0x6CB9, 0xA69F, 0x9C74, 0x3B5A, 0xFAF9 },
 { 0x3E36, 0x288A, 0xA09D, 0x9E5E, 0x17C8, 0x1D4D, 0x550E, 0xD1F3, 0xA591, 0x6259, 0x9725, 0x0A6D, 0xB5ED, 0x471D, 0xE6E8, 0x32AB },
 { 0xE623, 0x3459, 0x8B14, 0xDAC4, 0xB2FE, 0x397F, 0x7FF4, 0xB18A, 0xFE53, 0x9D45, 0xCA40, 0x4D24, 0x9331, 0xA80A, 0x21E5, 0x689B },
 { 0x6B3B, 0x1B17, 0x565B, 0x91BB, 0x366A, 0xE510, 0x5091, 0x5BCA, 0x051A, 0xECE4, 0xAEC4, 0xF1CD, 0xCD62, 0x265F, 0x5F0F, 0xC7BC },
 { 0xFA59, 0x6742, 0x8694, 0x7245, 0x1160, 0x6094, 0x47FB, 0x04B7, 0xA895, 0xEF11, 0xA00A, 0x7A82, 0x530C, 0x07EA, 0x3EC2, 0xFD85 },
 { 0x4073, 0x2E89, 0x9F30, 0x9AD5, 0xF0C0, 0x552D, 0xFC3F, 0x0113, 0xE3C6, 0x2F49, 0xD5A9, 0xC619, 0x8AB9, 0x8E26, 0xE426, 0xD7F4 },
 { 0x3E35, 0x0284, 0x52C9, 0x2BEE, 0x2176, 0xAF9E, 0x573B, 0x0AA7, 0xD31A, 0x51A4, 0xE924, 0x4758, 0x4506, 0xD60D, 0x08BD, 0xFD2F },
 { 0xAE21, 0xB13E, 0xB159, 0x9ED9, 0x872D, 0xC438, 0xD6FB, 0xA52C, 0x6B01, 0x8581, 0x8E7D, 0xE215, 0x8AE9, 0x81E1, 0x79FC, 0x1A6F },
 { 0x0AEB, 0xC815, 0x3C4D, 0x5088, 0xB51F, 0x12D3, 0xDC0E, 0x90D4, 0xD74D, 0x9488, 0xC7BA, 0x9F1C, 0x6C07, 0xB4E7, 0xBC0B, 0x0DB9 },
 { 0x268C, 0xD879, 0x17F7, 0xD97A, 0xDCCB, 0x454D, 0x50C6, 0x79FB, 0x2B88, 0xAD9C, 0xC0EB, 0x9BF3, 0x2120, 0x7524, 0x7FBD, 0x5139 },
 { 0xD7A6, 0xCEB5, 0x3C6C, 0x7CF0, 0x99BF, 0xB834, 0x4810, 0x9B4E, 0xD52E, 0x2085, 0xC78A, 0xF2A4, 0xFC7D, 0x37DE, 0x3924, 0xB618 },
 { 0xC974, 0x80C4, 0xBB89, 0xB26F, 0x69E9, 0xA081, 0x3DA2, 0xC59C, 0x774E, 0xC251, 0x2500, 0x0783, 0x51E6, 0x401B, 0x6FB3, 0x6228 },
 { 0x14CB, 0x7680, 0xC774, 0x9D51, 0x787A, 0x3F1B, 0x73F8, 0x6E56, 0x9069, 0x7CA8, 0x044B, 0xBC46, 0x7DC1, 0x5E20, 0x7D7C, 0xF3A8 },
 { 0x7478, 0x0AD2, 0xD27D, 0xA05B, 0xB99A, 0xCD4D, 0xE74F, 0x3724, 0x9112, 0x76CF, 0x05A1, 0xD76D, 0x9334, 0x408C, 0x4967, 0x9513 },
 { 0xB0D0, 0x6561, 0xDDD9, 0x85FD, 0x7069, 0x9BD1, 0x3D9E, 0x8A58, 0x0CCC, 0x4D32, 0x2205, 0xED40, 0x9C36, 0x815B, 0x47DA, 0x192D },
 { 0x44D5, 0x3157, 0x930A, 0x4713, 0x6D9C, 0xCF57, 0xA88D, 0x477D, 0x8F2F, 0x904F, 0x0C3E, 0x01AB, 0x397A, 0x9C8A, 0xDB20, 0x4FDC },
 { 0x3340, 0x6F37, 0x0B75, 0x1860, 0x8046, 0xF77D, 0x833E, 0xD8A5, 0xCD33, 0x4825, 0x938E, 0x6C67, 0xAB47, 0xFA0E, 0x9AED, 0x0FB7 },
 { 0x2EF4, 0xEC72, 0x9297, 0x61DD, 0xAD81, 0x0253, 0x2776, 0xE178, 0xBCD3, 0x965C, 0xF6CD, 0xE018, 0x8F93, 0x3BF2, 0x50DE, 0x7041 },
 { 0x7211, 0xD228, 0xB9FF, 0x2CFF, 0x75E5, 0x2F7A, 0x98E6, 0x4D56, 0xAE17, 0xBA64, 0x79DE, 0x2577, 0x3BC8, 0x3C25, 0x9C34, 0x9520 }

};
 
}
  */ 